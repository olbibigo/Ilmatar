<?php
namespace Repositories;

use Ilmatar\JqGrid;
use Ilmatar\HelperFactory;
use Symfony\Component\Translation\Translator;
use Symfony\Component\Routing\Generator\UrlGenerator;

/**
 * Parameter
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Parameter extends JqGrid
{
    public function getJqGridColModels(Translator $translator, UrlGenerator $urlGenerator = null, array $options = [])
    {
        $columns = parent::getJqGridColModels($translator, $urlGenerator, $options);
        foreach ($columns as $idx => $column) {
            if ("value" != $column['name']) {
                $columns[$idx]['editable'] = false;
            }
            if ('type' == $column['name']) {
                $columns[$idx]['searchoptions'] = array(
                    "sopt"  => array(self::JQGRID_OPERATOR_EQUAL),
                    "value" => self::buildSortValue(\Entities\Parameter::getAllTypes(), $translator)
                );
                $columns[$idx]['stype'] = "select";
                unset($columns[$idx]['align']);
                unset($columns[$idx]['formatter']);
                continue;
            }
        }

        return $columns;
    }
    
    public function formatJqGridRow($entity, Translator $translator, array $options = [])
    {
        $columns = parent::formatJqGridRow($entity, $translator, $options);

        if (\Entities\Parameter::TYPE_ENUM == $columns['type']) {
            $function = sprintf(
                'getAll%ss',
                HelperFactory::build('StringHelper')->snakeToCamel($columns['code'])
            );
            $columns['value'] = $translator->trans(\Entities\Parameter::$function()[$columns['value']]);
        }
        $columns['type'] = $translator->trans(\Entities\Parameter::getAllTypes()[$columns['type']]);
        

        
        return $columns;
    }
}
