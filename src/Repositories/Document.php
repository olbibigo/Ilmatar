<?php

namespace Repositories;

use Ilmatar\JqGrid;
use Symfony\Component\Translation\Translator;
use Symfony\Component\Routing\Generator\UrlGenerator;

/**
 * Document
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Document extends JqGrid
{

    protected $listExcludeForEdit = ['created_at', 'created_by'];

    public function getJqGridColNames(array $options = [])
    {
        $columns = parent::getJqGridColNames($options);
        $columns[2] = 'Mime type';
        $columns[3] = '1st version upload date';
        $columns[4] = 'Latest version upload date';
        $columns[]  = 'Version';
        $columns[]  = 'Actions';

        return $columns;
    }

    public function getJqGridColModels(Translator $translator, UrlGenerator $urlGenerator = null, array $options = [])
    {
        $columns = parent::getJqGridColModels($translator, $urlGenerator, $options);

        $columns[] = [
            "name" => 'version',
            "index" => 'version',
            "search" => false,
            "editable" => false,
            "sortable" => false
        ];
        $columns[] = [
            "name" => 'actions',
            "index" => 'actions',
            "search" => false,
            "editable" => false,
            "sortable" => false,
        ];

        return $columns;
    }

    public function formatJqGridRow($entity, Translator $translator, array $options = [])
    {
        $columns  = parent::formatJqGridRow($entity, $translator, $options);
        $files    = $entity->getFiles();
        $versions = [];
        foreach ($files as $file) {
            $versions[] = $file->getVersion();
        }
        $columns['version'] = $versions[count($versions) - 1];
        $columns['actions'] = $options['twig']->render(
            'back/documentActions.twig',
            [
                'entityId'      => $entity->getId(),
                'versions'      => json_encode($versions),
                'nbVersions'    => count($versions),
                'latestVersion' => $columns['version'],
                'mimeType'      => $columns['mime']
             ]
        );

        return $columns;
    }
}
